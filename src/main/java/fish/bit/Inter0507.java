package fish.bit;
// 面试题 05.07. 配对交换

// 配对交换。编写程序，交换某个整数的奇数位和偶数位，尽量使用较少的指令（也就是说，位0与位1交换，位2与位3交换，以此类推）
// eg num =2 二进制10 交换后 01 即res=1
public class Inter0507 {
    public int exchangeBits(int num) {
        // 以2bit为单位
        // 00 -- 00      10 -- 01 
        // 01 -- 10      11 -- 11
        // 看能否找到一个掩码mask - - 失败

        // 老老实实移位操作
        // 区分>> >>>有符号与无符号移位
        // 用一个掩码提取出偶数位：0101010101....01 与操作，偶数位=原  奇数位=0
        // 16进制表示：0x 55555555(int 为32位) (注意是第0位开始计数，第0位位偶数位)
        // 掩码：10101010....10  16进制：0xaaaaaaaa
        int even = num & 0x55555555;
        int odd = num & 0xaaaaaaaa;
        // 偶数位左移
        even = even << 1;
        // 奇数位右移
        odd = odd >> 1;
        // 如何理解相加=结果？
        // 左移之后，除了目标，均为0，相加不影响结果
        // 我们需要的结果只是：偶数位+奇数位，补零无影响（首尾补零）
        return even + odd;
    }
}
